{
    "swagger": "2.0",
    "info": {
        "description": "Swagger API for players storage.",
        "title": "Players service Swagger API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "erupshis",
            "email": "e.rupshis@gmail.com"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/player": {
            "get": {
                "description": "provides player data by playerID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "summary": "select player by ID",
                "operationId": "player-select",
                "parameters": [
                    {
                        "type": "string",
                        "description": "player search by id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserDataP"
                        }
                    },
                    "400": {
                        "description": "incorrect query in request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "something wrong with storage",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/withdraw": {
            "patch": {
                "description": "withdraw currency from player balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "summary": "withdraw currency from player account by ID",
                "operationId": "player-withdraw",
                "parameters": [
                    {
                        "description": "user withdraw amount",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserWithdrawP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "incorrect request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "insufficient funds",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "unexpected marshalling error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.UserDataP": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.UserWithdrawP": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        }
    }
}